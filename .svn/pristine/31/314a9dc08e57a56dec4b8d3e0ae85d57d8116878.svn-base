package controller;

import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import dao.CartDao;
import dao.LoginDao;
import model.Cart;
import model.CartItem;
import model.User;

@Controller
public class LoginController {
	@Autowired
	private LoginDao loginDao;
	@Autowired
	private CartDao cartDao;
	@Autowired
	private Cart cart;
	@RequestMapping(value="/login/loginPost.html",method=RequestMethod.POST)
	public ModelAndView login(@Valid User user,
			BindingResult bindingResult, HttpSession session) {
		if(bindingResult.hasErrors()) {
			System.out.println("logincontroller bind error");
			ModelAndView mav = new ModelAndView("home/template");
			mav.addObject("HEADER","login.jsp");
			return mav;
		}
		User loginUser = loginDao.findByIdAndPwd(user);
		ModelAndView mav = new ModelAndView("home/template");
		if(loginUser != null) {//로그인 성공
			session.setAttribute("loginUser", user.getId());//세션에 저장
		//DB에서 장바구니 정보(my_cart)를 불러와서 모델(Cart)에 넣는다.시작
			List<CartItem> cartList = cartDao.selectCart(user.getId());
			if(cartList != null) {//장바구니 정보가 존재하는 경우
				Iterator it = cartList.iterator();
				int row = 0;
				while(it.hasNext()) {
					CartItem ci = (CartItem)it.next();
					//Cart에 DB 정보를 저장한다.
					this.cart.setCodeList(row, ci.getCode());
					this.cart.setNumList(row, ci.getNum());
					row++;
				}
				this.cart.setId(user.getId());
				session.setAttribute("CART", this.cart);
			}
		//DB에서 장바구니 정보(my_cart)를 불러와서 모델(Cart)에 넣는다.끝
		}else {//로그인 실패
			
		}
		mav.addObject("BODY","loginResult.jsp");
		return mav;
	}
	@RequestMapping(value="/login/login.html")
	public ModelAndView toLogin() {
		ModelAndView mav = new ModelAndView("home/login");
		mav.addObject(new User());//폼폼을 위해 객체를 주입
		return mav;
	}
}



















